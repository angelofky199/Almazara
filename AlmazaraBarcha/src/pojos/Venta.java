package pojos;
// Generated 15-sep-2016 21:42:28 by Hibernate Tools 4.3.1


import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Venta generated by hbm2java
 */
@Entity
@Table(name="venta"
    ,catalog="almazaradb"
)
public class Venta  implements java.io.Serializable {


     private Integer idVenta;
     private Cliente cliente;
     private Usuario usuario;
     private Date fecha;
     private boolean factura;
     private boolean regalo;
     private boolean otro;
     private float totalVenta;
     private String observaciones;
     private float litrosDeclarables;
     private Set ventaHasProductos = new HashSet(0);

    public Venta() {
    }

	
    public Venta(Cliente cliente, Usuario usuario, Date fecha, boolean factura, boolean regalo, boolean otro, float totalVenta, float litrosDeclarables) {
        this.cliente = cliente;
        this.usuario = usuario;
        this.fecha = fecha;
        this.factura = factura;
        this.regalo = regalo;
        this.otro = otro;
        this.totalVenta = totalVenta;
        this.litrosDeclarables = litrosDeclarables;
    }
    public Venta(Cliente cliente, Usuario usuario, Date fecha, boolean factura, boolean regalo, boolean otro, float totalVenta, String observaciones, float litrosDeclarables, Set ventaHasProductos) {
       this.cliente = cliente;
       this.usuario = usuario;
       this.fecha = fecha;
       this.factura = factura;
       this.regalo = regalo;
       this.otro = otro;
       this.totalVenta = totalVenta;
       this.observaciones = observaciones;
       this.litrosDeclarables = litrosDeclarables;
       this.ventaHasProductos = ventaHasProductos;
    }
   
     @Id @GeneratedValue(strategy=IDENTITY)

    
    @Column(name="idVenta", unique=true, nullable=false)
    public Integer getIdVenta() {
        return this.idVenta;
    }
    
    public void setIdVenta(Integer idVenta) {
        this.idVenta = idVenta;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="Cliente_idCliente", nullable=false)
    public Cliente getCliente() {
        return this.cliente;
    }
    
    public void setCliente(Cliente cliente) {
        this.cliente = cliente;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="Usuario_idUsuario", nullable=false)
    public Usuario getUsuario() {
        return this.usuario;
    }
    
    public void setUsuario(Usuario usuario) {
        this.usuario = usuario;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="fecha", nullable=false, length=19)
    public Date getFecha() {
        return this.fecha;
    }
    
    public void setFecha(Date fecha) {
        this.fecha = fecha;
    }

    
    @Column(name="factura", nullable=false)
    public boolean isFactura() {
        return this.factura;
    }
    
    public void setFactura(boolean factura) {
        this.factura = factura;
    }

    
    @Column(name="regalo", nullable=false)
    public boolean isRegalo() {
        return this.regalo;
    }
    
    public void setRegalo(boolean regalo) {
        this.regalo = regalo;
    }

    
    @Column(name="otro", nullable=false)
    public boolean isOtro() {
        return this.otro;
    }
    
    public void setOtro(boolean otro) {
        this.otro = otro;
    }

    
    @Column(name="totalVenta", nullable=false, precision=12, scale=0)
    public float getTotalVenta() {
        return this.totalVenta;
    }
    
    public void setTotalVenta(float totalVenta) {
        this.totalVenta = totalVenta;
    }

    
    @Column(name="Observaciones", length=100)
    public String getObservaciones() {
        return this.observaciones;
    }
    
    public void setObservaciones(String observaciones) {
        this.observaciones = observaciones;
    }

    
    @Column(name="litrosDeclarables", nullable=false, precision=12, scale=0)
    public float getLitrosDeclarables() {
        return this.litrosDeclarables;
    }
    
    public void setLitrosDeclarables(float litrosDeclarables) {
        this.litrosDeclarables = litrosDeclarables;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="venta")
    public Set getVentaHasProductos() {
        return this.ventaHasProductos;
    }
    
    public void setVentaHasProductos(Set ventaHasProductos) {
        this.ventaHasProductos = ventaHasProductos;
    }




}


